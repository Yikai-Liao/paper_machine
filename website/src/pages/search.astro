---
import "@pagefind/default-ui/css/ui.css";
import Main from "@layouts/Main.astro";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import { SITE } from "@config";

const backUrl = `${Astro.url.pathname}`;
---

<Layout title={`Search | ${SITE.title}`}>
  <Header activeNav="search" />
  <Main pageTitle="Search" pageDesc="Search any article ...">
    <div id="pagefind-search" transition:persist data-backurl={backUrl}></div>
  </Main>
  <Footer />
</Layout>

<!-- 将 SITE.base 作为全局变量直接注入 -->
<script is:inline define:vars={{ siteBase: SITE.base }}>
  // 确保全局变量可用于其他脚本
  window.SITE_BASE = siteBase;
</script>

<script>
  // 使用全局变量获取 base 路径
  const SITE_BASE = window.SITE_BASE || "/"; // Default to / if unset

  function getCorrectBundlePath(base) {
    // Ensure base ends with a slash if it's not just "/"
    const basePath = base === '/' ? '/' : (base.endsWith('/') ? base : base + '/');
    // Prevent double slash if base is already "/"
    const pagefindDir = 'pagefind/';
    return basePath === '/' ? `/${pagefindDir}` : basePath + pagefindDir;
  }

  function initSearch() {
    const pageFindSearch = document.querySelector("#pagefind-search");
    if (!pageFindSearch) return;
    
    const params = new URLSearchParams(window.location.search);
    const onIdle = window.requestIdleCallback || (cb => setTimeout(cb, 1));
    
    onIdle(async () => {
      try {
        // @ts-expect-error — Missing types for @pagefind/default-ui package.
        const { PagefindUI } = await import("@pagefind/default-ui");
        
        if (import.meta.env.DEV) {
          pageFindSearch.innerHTML = `
              <div class="bg-skin-card rounded p-4 space-y-4 mb-4">
                <p><strong>DEV mode Warning! </strong>You need to build the project at least once to see the search results during development.</p>
                <code class="block bg-black text-white px-2 py-1 rounded">npm run build</code>
              </div>
            `;
        }
        
        // 确保正确设置路径，第一个斜杠非常重要
        const pagefindBundlePath = getCorrectBundlePath(SITE_BASE);
        const search = new PagefindUI({
          element: "#pagefind-search",
          showSubResults: true,
          showImages: false,
          baseUrl: SITE_BASE, // Base for result links
          bundlePath: pagefindBundlePath, // Base for Pagefind's own assets
          processTerm: function (term) {
            params.set("q", term);
            history.replaceState(history.state, "", "?" + params.toString());
            const backUrl = pageFindSearch?.dataset?.backurl;
            sessionStorage.setItem("backUrl", backUrl + "?" + params.toString());
            return term;
          },
        });
        
        const query = params.get("q");
        if (query) {
          search.triggerSearch(query);
        }
        
        const searchInput = document.querySelector(".pagefind-ui__search-input");
        const clearButton = document.querySelector(".pagefind-ui__search-clear");
        searchInput?.addEventListener("input", resetSearchParam);
        clearButton?.addEventListener("click", resetSearchParam);
        
        function resetSearchParam(e) {
          if (e.target?.value?.trim() === "") {
            history.replaceState(history.state, "", window.location.pathname);
          }
        }
      } catch (error) {
        pageFindSearch.innerHTML = `
          <div class="bg-skin-card rounded p-4 space-y-4 mb-4 text-skin-base">
            <p><strong>Error loading search:</strong> ${error.message}</p>
            <p>Please make sure you've run <code>npm run build</code> first.</p>
          </div>
        `;
      }
    });
  }
  
  document.addEventListener("astro:after-swap", () => {
    const pagefindSearch = document.querySelector("#pagefind-search");
    if (pagefindSearch && pagefindSearch.querySelector("form")) return;
    initSearch();
  });
  
  initSearch();
</script>

<style is:global>
  #pagefind-search {
    --pagefind-ui-font: var(--font-primary);
    --pagefind-ui-text: rgb(var(--color-text-base));
    --pagefind-ui-background: rgb(var(--color-fill));
    --pagefind-ui-border: rgb(var(--color-border));
    --pagefind-ui-primary: rgb(var(--color-accent));
    --pagefind-ui-tag: rgb(var(--color-fill));
    --pagefind-ui-border-radius: 0.375rem;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-image-border-radius: 8px;
    --pagefind-ui-image-box-ratio: 3 / 2;
  }
  #pagefind-search form::before {
    background-color: rgb(var(--color-text-base));
  }
  #pagefind-search input {
    font-weight: 400;
    border: 1px solid rgb(var(--color-border));
  }
  #pagefind-search input:focus-visible {
    outline: 1px solid rgb(var(--color-accent));
  }
  #pagefind-search .pagefind-ui__result-title a {
    color: rgb(var(--color-accent));
    outline-offset: 1px;
    outline-color: rgb(var(--color-accent));
  }
  #pagefind-search .pagefind-ui__result-title a:focus-visible,
  #pagefind-search .pagefind-ui__search-clear:focus-visible {
    text-decoration-line: none;
    outline-width: 2px;
    outline-style: dashed;
  }
  #pagefind-search .pagefind-ui__result:last-of-type {
    border-bottom: 0;
  }
  #pagefind-search .pagefind-ui__result-nested .pagefind-ui__result-link:before {
    font-family: system-ui;
  }
</style>