name: Recommendation Pipeline

# Manualy and daily triggered

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Daily at midnight

permissions:
  contents: write

jobs:
  recommend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r recommend_system/requirements.txt

      - name: Fetch latest papers
        run: |
          python recommend_system/script/craw_arxiv.py
      
      - name: Build embeddings
        env:
          EMBEDDING_API_KEY : ${{ secrets.EMBEDDING_API_KEY }}
        run: |
          python recommend_system/script/build_embed.py

      - name: Upload embeddings and latest CSV
        uses: actions/upload-artifact@v4
        with:
          name: embeddings-and-csv
          path: |
            data/arxiv_latest.csv
            data/arxiv_latest.npy

      - name: Fit & Predict
        run: |
          python recommend_system/script/fit_model.py

      - name: Copy CSV with predictions
        run: |
          cp data/arxiv_latest.csv data/arxiv_latest_pred.csv

      - name: Upload CSV with predictions
        uses: actions/upload-artifact@v4
        with:
          name: predictions-csv
          path: data/arxiv_latest_pred.csv

      - name: Upload plots
        uses: actions/upload-artifact@v4
        with:
          name: plots
          path: data/visualizations

      - name: AI summary
        env:
          SUMMARY_API_KEY : ${{ secrets.SUMMARY_API_KEY }}
        run: |
          python recommend_system/script/ai_summary.py

      - name: List new blog posts
        id: list_new_files
        run: |
          # Ensure git knows about the files generated by the ai_summary step
          # The commit step will handle the final add, but we need to stage them to diff against HEAD
          # git add website/src/content/blog/  <-- This line is removed
          # Find newly added markdown files in the target directory relative to HEAD
          git diff --name-only --diff-filter=A HEAD -- "website/src/content/blog/**/*.md" > new_blog_posts.txt
          if [ -s new_blog_posts.txt ]; then
            echo "Found new blog posts:"
            cat new_blog_posts.txt
            # Prepare multiline string for output
            paths=$(cat new_blog_posts.txt | paste -sd '\n')
            echo "paths<<EOF" >> $GITHUB_OUTPUT
            echo "$paths" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "No new blog posts found."
            echo "paths=" >> $GITHUB_OUTPUT # Set empty output
          fi

      - name: Upload new blog posts artifact
        # Only run if new files were found
        if: steps.list_new_files.outputs.paths != ''
        uses: actions/upload-artifact@v4
        with:
          name: new-blog-posts
          path: |
            ${{ steps.list_new_files.outputs.paths }}

      - name: Git commit
        run: |
          git config --global user.email "lyk-boya@outlook.com"
          git config --global user.name "GitHub Action"
          git add ./website/src/content/
          git commit -m "Daily Paper Recommendation"
          git push